@page "/periodictable"
@using Periodic.Shared.Models
@inject HttpClient Http
@inject IElementService ElementService
@inject IModalService modal

<PageTitle>The Table of elements</PageTitle>

<h1 style="width:90rem; text-align:center">The Table of elements</h1>

@{
    var elements = ElementService.Elements;
    if (elements.Count != 0)
    {
        //Period 1
        <div class='card-group'>
            @generateCard(elements[0])
            <div class='card text-center hid' style='width:80rem'><div class='card-body'></div></div>
            @generateCard(elements[1])
        </div>
        //Period 2
        <div class='card-group'>
            @generateCard(elements[2])
            @generateCard(elements[3])
            <div class='card text-center hid' style='width:50rem'><div class='card-body'></div></div>
            @for (var i = 4; i < 10; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Period 3
        <div class='card-group'>
            @generateCard(elements[10])
            @generateCard(elements[11])
            <div class='card text-center hid' style='width:50rem'><div class='card-body'></div></div>
            @for (var i = 12; i < 18; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Period 4
        <div class='card-group'>
            @for (var i = 18; i < 36; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Period 5
        <div class='card-group'>
            @for (var i = 36; i < 54; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Period 6
        <div class='card-group'>
            @generateCard(elements[54])
            @generateCard(elements[55])
            <div class='card text-center hid' style='width:5rem'><div class='card-body'><h5 style='margin-top:1.4rem'>57-71</h5></div></div>
            @for (var i = 71; i < 86; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Period 7
        <div class='card-group'>
            @generateCard(elements[86])
            @generateCard(elements[87])
            <div class='card text-center hid' style='width:5rem'><div class='card-body'><h5 style='margin-top:1.4rem'>89-103</h5></div></div>
            @for (var i = 103; i < 118; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Spacing
        <div class='card-group' style='margin-top: 20px'><div class='card text-center hid' style='width:90rem'><div class='card-body'></div></div></div>
        //Period 8
        <div class='card-group'>
            <div class='card text-center hid' style='width:10rem'><div class='card-body'></div></div>
            @for (var i = 56; i < 71; i++)
            {
                @generateCard(elements[i])
            }
        </div>
        //Period 9
        <div class='card-group'>
            <div class='card text-center hid' style='width:10rem'><div class='card-body'></div></div>
            @for (var i = 88; i < 103; i++)
            {
                @generateCard(elements[i])
            }
        </div>
    }
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ElementService.GetElements();
    }

    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    public void showElement(string name, int no)
    {
        var options = new ModalOptions { Size = ModalSize.Large, Position = ModalPosition.Middle };
        var parameters = new ModalParameters
                {
            { nameof(FetchData.AtomicNumber), no}
                };
        Modal.Show<FetchData>(name, parameters, options);
    }

    RenderFragment generateCard(Element element)
    {
        return
    @<div class="card text-center" @onclick="@(() => showElement(@element.ElementName, (int)@element.AtomicNumber))">
                <div class="card-body">
                    <p class="card-text">@element.AtomicNumber</p>
                    <h2 class="card-title">@element.Symbol</h2>
                    <p class="card-text text-muted">@element.ElementName</p>
                </div>
    </div>
    ;
    }
}